<userControls:PhoneDrawerLayoutPage
    x:Class="MegaApp.Views.SharedItemsPage"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:phone="clr-namespace:Microsoft.Phone.Controls;assembly=Microsoft.Phone"
    xmlns:shell="clr-namespace:Microsoft.Phone.Shell;assembly=Microsoft.Phone"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:telerikPrimitives="clr-namespace:Telerik.Windows.Controls;assembly=Telerik.Windows.Controls.Primitives"
    xmlns:telerik="clr-namespace:Telerik.Windows.Controls;assembly=Telerik.Windows.Core"
    xmlns:userControls="clr-namespace:MegaApp.UserControls"
    xmlns:models="clr-namespace:MegaApp.ViewModels"
    FontFamily="{StaticResource PhoneFontFamilyNormal}"
    FontSize="{StaticResource PhoneFontSizeNormal}"
    Foreground="{StaticResource PhoneForegroundBrush}"
    SupportedOrientations="Portrait" Orientation="Portrait"
    mc:Ignorable="d"
    shell:SystemTray.IsVisible="True"
    shell:SystemTray.BackgroundColor="{StaticResource PhoneChromeColor}"
    d:DataContext="{d:DesignInstance models:SharedItemsViewModel}">

    <userControls:MegaPhoneApplicationPage.Resources>
        <shell:ApplicationBar x:Key="SharedItemsMenu">
            <shell:ApplicationBar.MenuItems>
                <shell:ApplicationBarMenuItem
					Text="refresh"	
					Click="OnRefreshClick"			
				/>
                <shell:ApplicationBarMenuItem
					Text="sort"	
					Click="OnSortClick"			
				/>
            </shell:ApplicationBar.MenuItems>            
        </shell:ApplicationBar>
    </userControls:MegaPhoneApplicationPage.Resources>

    <!--LayoutRoot is the root grid where all page content is placed-->
    <userControls:DrawerLayout x:Name="MainDrawerLayout">
        <Grid x:Name="LayoutRoot" Background="Transparent">
            <Grid.RowDefinitions>
                <RowDefinition Height="84"/>
                <RowDefinition Height="*"/>
            </Grid.RowDefinitions>

            <Grid x:Name="HeaderGrid" Background="{StaticResource PhoneChromeBrush}" Margin="0,-6,0,0">
                <Button x:Name="BtnHamburger" HorizontalAlignment="Left" Style="{StaticResource AppBarButtonStyleNoBorder}" VerticalAlignment="Center" Width="48" Height="48" Margin="12,0,0,0" Tap="OnHamburgerTap">
                    <Path Data="{Binding LocalizedVisualResources.HamburgerPathData, Mode=OneWay, Source={StaticResource LocalizedStrings}}" Height="20" Width="24" HorizontalAlignment="Left" Stretch="UniformToFill" VerticalAlignment="Center" FlowDirection="LeftToRight" StrokeThickness="0">
                        <Path.Fill>
                            <SolidColorBrush Color="{StaticResource PhoneForegroundColor}"/>
                        </Path.Fill>
                    </Path>
                </Button>
            </Grid>

            <!--Pivot Control-->
            <phone:Pivot x:Name="SharedItemsPivot" Grid.Row="1" SelectionChanged="OnPivotSelectionChanged" HeaderTemplate="{StaticResource PivotMegaHeaderTemplate}" Style="{StaticResource PivotStyle}" Margin="0">
                <!--Pivot item one-->
                <phone:PivotItem x:Name="IncomingPivotItem" CacheMode="{x:Null}" Header="{Binding LocalizedUiResources.Incoming, Converter={StaticResource TextToLowerCaseConverter}, Source={StaticResource LocalizedStrings}}" Margin="0,-10,0,0" Loaded="OnPivotLoaded">
                    <Grid Margin="0,0,12,0" Background="Transparent">
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="*"/>
                        </Grid.RowDefinitions>

                        <StackPanel Grid.Row="0" Margin="0">
                            <Grid Margin="24,0,12,5">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition/>
                                    <ColumnDefinition Width="Auto"/>
                                </Grid.ColumnDefinitions>
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="16"/>
                                    <RowDefinition Height="24"/>
                                </Grid.RowDefinitions>
                                <ProgressBar VerticalAlignment="Center" IsIndeterminate="True" Foreground="{StaticResource MegaRedColorBrush}" Height="8" Grid.ColumnSpan="2" Visibility="{Binding InShares.IsBusy, Converter={StaticResource BooleanToVisibilityConverter}}"/>
                                <userControls:BreadCrumb x:Name="IncomingSharedBreadCrumb" ItemsSource="{Binding InShares.BreadCrumbs}" ItemsSourceType="{Binding InShares.Type}" Margin="0,0,6,0" Grid.Row="1" Grid.Column="0"/>
                                <StackPanel Grid.Row="1" Grid.Column="1" HorizontalAlignment="Right" VerticalAlignment="Center" Visibility="{Binding IsNetworkAvailable, Converter={StaticResource BooleanToVisibilityConverter}}">
                                    <RichTextBox TextAlignment="Right" FontSize="{StaticResource InformationFontSize}" Margin="0" Visibility="{Binding IsInSharedItemsRootListView, Converter={StaticResource BooleanToVisibilityConverter}}">
                                        <Paragraph>
                                            <Run Text="{Binding NumberOfInSharedFoldersText}"/>
                                            <Run Text="{Binding LocalizedUiResources.SharedFolders, Source={StaticResource LocalizedStrings}, Converter={StaticResource TextToLowerCaseConverter}}" Foreground="{StaticResource MegaRedColorBrush}"/>
                                        </Paragraph>
                                    </RichTextBox>
                                    <StackPanel HorizontalAlignment="Right" VerticalAlignment="Center" Visibility="{Binding IsInSharedItemsRootListView, Converter={StaticResource BooleanToVisibilityConverter}, ConverterParameter=false}">
                                        <TextBlock Text="{Binding InShares.EmptyInformationText}" TextAlignment="Right" FontSize="{StaticResource InformationFontSize}" Margin="0" Visibility="{Binding HasInSharedFolders, ConverterParameter=false, Converter={StaticResource BooleanToVisibilityConverter}}"/>
                                        <TextBlock Text="{Binding InShares.FolderRootNode.Information}" TextAlignment="Right" FontSize="{StaticResource InformationFontSize}" Margin="0" Visibility="{Binding HasInSharedFolders, Converter={StaticResource BooleanToVisibilityConverter}}"/>
                                    </StackPanel>
                                </StackPanel>
                                <TextBlock Text="{Binding InShares.EmptyInformationText}" Grid.Row="1" Grid.Column="1" HorizontalAlignment="Right" VerticalAlignment="Center" TextAlignment="Right" FontSize="{StaticResource InformationFontSize}" Margin="0" Visibility="{Binding IsNetworkAvailable, ConverterParameter=false, Converter={StaticResource BooleanToVisibilityConverter}}"/>
                            </Grid>
                        </StackPanel>

                        <Grid Grid.Row="1" Margin="12,0,0,0">
                            <telerikPrimitives:RadDataBoundListBox 
            					x:Name="LstIncomingSharedFolders"                                
            					DataContext="{Binding InShares}"                                
            					ItemsSource="{Binding ChildNodes}"
                                ItemTap="OnIncomingSharedItemTap"
                                ItemTemplateSelector="{Binding NodeTemplateSelector}" 
            					telerik:InteractionEffectManager.IsInteractionEnabled="True" 
                                ItemStateChanged="OnSharedItemStateChanged"
                                ScrollStateChanged="OnScrollStateChanged" 
                                IsCheckModeEnabled="True" 
                                IsCheckModeActiveChanged="OnCheckModeChanged"
                                CheckBoxStyle="{Binding MultiSelectCheckBoxStyle}" 
                                ItemCheckedPath="IsMultiSelected" 
                                IsCheckModeActive="{Binding IsMultiSelectActive, Mode=TwoWay}" 
                                RealizedItemsBufferScale="3" 
            					DataVirtualizationMode="Automatic"
            					EmptyContentDisplayMode="DataSourceEmpty" 
            					EmptyContent=""
                                EmptyContentTemplate="{Binding EmptyContentTemplate}"
                                VirtualizationStrategyDefinition="{Binding VirtualizationStrategy}"
            					IsAsyncBalanceEnabled="True"/>
                        </Grid>
                    </Grid>
                </phone:PivotItem>

                <!--Pivot item two-->
                <phone:PivotItem x:Name="OutgoingPivotItem" CacheMode="{x:Null}" Header="{Binding LocalizedUiResources.Outgoing, Converter={StaticResource TextToLowerCaseConverter}, Source={StaticResource LocalizedStrings}}" Margin="0,-10,0,0" Loaded="OnPivotLoaded">
                    <Grid Margin="0,0,12,0" Background="Transparent">
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="*"/>
                        </Grid.RowDefinitions>

                        <StackPanel Grid.Row="0" Margin="0">
                            <Grid Margin="24,0,12,5">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition/>
                                    <ColumnDefinition Width="Auto"/>
                                </Grid.ColumnDefinitions>
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="16"/>
                                    <RowDefinition Height="24"/>
                                </Grid.RowDefinitions>
                                <ProgressBar VerticalAlignment="Center" IsIndeterminate="True" Foreground="{StaticResource MegaRedColorBrush}" Height="8" Grid.ColumnSpan="2" Visibility="{Binding OutShares.IsBusy, Converter={StaticResource BooleanToVisibilityConverter}}"/>                                
                                <userControls:BreadCrumb x:Name="OutgoingSharedBreadCrumb" ItemsSource="{Binding OutShares.BreadCrumbs}" ItemsSourceType="{Binding OutShares.Type}"  Margin="0,0,6,0" Grid.Row="1" Grid.Column="0"/>
                                <StackPanel Grid.Row="1" Grid.Column="1" HorizontalAlignment="Right" VerticalAlignment="Center" Visibility="{Binding IsNetworkAvailable, Converter={StaticResource BooleanToVisibilityConverter}}">
                                    <RichTextBox TextAlignment="Right" FontSize="{StaticResource InformationFontSize}" Margin="0" Visibility="{Binding IsOutSharedItemsRootListView, Converter={StaticResource BooleanToVisibilityConverter}}">
                                        <Paragraph>
                                            <Run Text="{Binding NumberOfOutSharedFoldersText}"/>
                                            <Run Text="{Binding LocalizedUiResources.SharedFolders, Source={StaticResource LocalizedStrings}, Converter={StaticResource TextToLowerCaseConverter}}" Foreground="{StaticResource MegaRedColorBrush}"/>
                                        </Paragraph>
                                    </RichTextBox>
                                    <StackPanel HorizontalAlignment="Right" VerticalAlignment="Center" Visibility="{Binding IsOutSharedItemsRootListView, Converter={StaticResource BooleanToVisibilityConverter}, ConverterParameter=false}">
                                        <TextBlock Text="{Binding OutShares.EmptyInformationText}" TextAlignment="Right" FontSize="{StaticResource InformationFontSize}" Margin="0" Visibility="{Binding OutShares.HasChildNodesBinding, ConverterParameter=false, Converter={StaticResource BooleanToVisibilityConverter}}"/>
                                        <TextBlock Text="{Binding OutShares.FolderRootNode.Information}" TextAlignment="Right" FontSize="{StaticResource InformationFontSize}" Margin="0" Visibility="{Binding OutShares.HasChildNodesBinding, Converter={StaticResource BooleanToVisibilityConverter}}"/>
                                    </StackPanel>
                                </StackPanel>
                                <TextBlock Text="{Binding OutShares.EmptyInformationText}" Grid.Row="1" Grid.Column="1" HorizontalAlignment="Right" VerticalAlignment="Center" TextAlignment="Right" FontSize="{StaticResource InformationFontSize}" Margin="0" Visibility="{Binding IsNetworkAvailable, ConverterParameter=false, Converter={StaticResource BooleanToVisibilityConverter}}"/>
                            </Grid>
                        </StackPanel>

                        <Grid Grid.Row="1" Margin="12,0,0,0">
                            <telerikPrimitives:RadDataBoundListBox 
            					x:Name="LstOutgoingSharedFolders"                                
            					DataContext="{Binding OutShares}"                                
            					ItemsSource="{Binding ChildNodes}"
                                ItemTap="OnOutgoingSharedItemTap"
                                ItemTemplateSelector="{Binding NodeTemplateSelector}" 
            					telerik:InteractionEffectManager.IsInteractionEnabled="True" 
                                ItemStateChanged="OnSharedItemStateChanged"
                                ScrollStateChanged="OnScrollStateChanged"
                                IsCheckModeEnabled="True" 
            					IsCheckModeActiveChanged="OnCheckModeChanged"
            					CheckBoxStyle="{Binding MultiSelectCheckBoxStyle}" 
            					ItemCheckedPath="IsMultiSelected" 
            					IsCheckModeActive="{Binding IsMultiSelectActive, Mode=TwoWay}" 
                                RealizedItemsBufferScale="3" 
            					DataVirtualizationMode="Automatic"
            					EmptyContentDisplayMode="DataSourceEmpty" 
            					EmptyContent=""
                                EmptyContentTemplate="{Binding EmptyContentTemplate}"
                                VirtualizationStrategyDefinition="{Binding VirtualizationStrategy}"
            					IsAsyncBalanceEnabled="True"/>
                        </Grid>
                    </Grid>
                </phone:PivotItem>                

            </phone:Pivot>
        </Grid>
        <Grid x:Name="SlideInGrid" Background="{StaticResource PhoneChromeBrush}" Margin="0,-4,0,0">
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto"/>
                <RowDefinition/>
            </Grid.RowDefinitions>
            <Grid Height="100" Margin="0,50,0,48">
                <Button x:Name="BtnMyAccount" Width="420" Style="{StaticResource ButtonStyleNoBorder}" HorizontalAlignment="Left" VerticalAlignment="Center" Tap="OnMyAccountTap">
                    <Grid HorizontalAlignment="Left" VerticalAlignment="Center" Width="420">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto"/>
                            <ColumnDefinition />
                        </Grid.ColumnDefinitions>
                        <Ellipse x:Name="HamburgerAvatarLetterBackgroud" Grid.Column="0" HorizontalAlignment="Left" Height="72" Stroke="Black" VerticalAlignment="Center" Width="72" Margin="24,0">
                            <Ellipse.Fill>
                                <SolidColorBrush Color="{Binding AccountDetails.AvatarColor}"/>
                            </Ellipse.Fill>
                        </Ellipse>
                        <TextBlock x:Name="HamburgerAvatarLetter" Margin="0,0,0,8" Text="{Binding AccountDetails.AvatarLetter}" HorizontalAlignment="Center" VerticalAlignment="Center" FontSize="{StaticResource PhoneFontSizeExtraLarge}" Style="{StaticResource PhoneTextTitle1Style}"/>
                        <Image x:Name="ImgAvatarMenu" Source="{Binding AccountDetails.AvatarUri}" HorizontalAlignment="Center" Height="72" VerticalAlignment="Center" Width="72" Stretch="UniformToFill" Visibility="{Binding AccountDetails.HasAvatarImage, Converter={StaticResource BooleanToVisibilityConverter}}">
                            <Image.Clip>
                                <EllipseGeometry Center="36,36" RadiusX="36" RadiusY="36" />
                            </Image.Clip>
                        </Image>
                        <StackPanel Grid.Column="1" VerticalAlignment="Center" HorizontalAlignment="Left" Margin="0,-12,12,0">
                            <TextBlock Text="{Binding AccountDetails.UserName}" TextTrimming="WordEllipsis" FontFamily="Segoe WP" FontSize="30" Foreground="{StaticResource PhoneDisabledBrush}"/>
                            <TextBlock Text="{Binding AccountDetails.UserEmail}" TextTrimming="WordEllipsis" FontFamily="Segoe WP SemiLight" FontSize="20" Foreground="{StaticResource PhoneDisabledBrush}"/>
                        </StackPanel>
                    </Grid>
                </Button>
            </Grid>
            <telerikPrimitives:RadDataBoundListBox 
                x:Name="LstHamburgerMenu" 
                Grid.Row="1" 
                ItemsSource="{Binding MenuItems}" 
                ItemTap="OnHamburgerMenuItemTap" 
                ItemTemplate="{StaticResource HamburgerMenuItem}" 
                ScrollViewer.VerticalScrollBarVisibility="Disabled" 
                telerik:InteractionEffectManager.IsInteractionEnabled="True" 
             />
        </Grid>
    </userControls:DrawerLayout>

</userControls:PhoneDrawerLayoutPage>